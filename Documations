

local NoqtUi = {}
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local mouse = game.Players.LocalPlayer:GetMouse()

-- Theme 
local Themes = {
    Dark = {
        Background = Color3.fromRGB(20, 20, 20),
        Foreground = Color3.fromRGB(220, 220, 220),
        Accent = Color3.fromRGB(60, 60, 60),
        Button = Color3.fromRGB(30, 30, 30),
        Toggle = Color3.fromRGB(45, 45, 45),
        Slider = Color3.fromRGB(70, 70, 70),
        Dropdown = Color3.fromRGB(35, 35, 35),
        Textbox = Color3.fromRGB(40, 40, 40)
    },
    Sky = {
        Background = Color3.fromRGB(60, 70, 90),
        Foreground = Color3.fromRGB(240, 240, 255),
        Accent = Color3.fromRGB(90, 100, 130),
        Button = Color3.fromRGB(80, 90, 120),
        Toggle = Color3.fromRGB(100, 110, 140),
        Slider = Color3.fromRGB(90, 100, 130),
        Dropdown = Color3.fromRGB(85, 95, 125),
        Textbox = Color3.fromRGB(80, 90, 120)
    },
    Cyber = {
        Background = Color3.fromRGB(10, 10, 20),
        Foreground = Color3.fromRGB(0, 255, 170),
        Accent = Color3.fromRGB(255, 0, 128),
        Button = Color3.fromRGB(0, 255, 128),
        Toggle = Color3.fromRGB(0, 170, 255),
        Slider = Color3.fromRGB(200, 200, 255),
        Dropdown = Color3.fromRGB(255, 200, 100),
        Textbox = Color3.fromRGB(255, 255, 255)
    },
    Light = {
        Background = Color3.fromRGB(245, 245, 245),
        Foreground = Color3.fromRGB(25, 25, 25),
        Accent = Color3.fromRGB(220, 220, 220),
        Button = Color3.fromRGB(210, 210, 210),
        Toggle = Color3.fromRGB(200, 200, 200),
        Slider = Color3.fromRGB(190, 190, 190),
        Dropdown = Color3.fromRGB(180, 180, 180),
        Textbox = Color3.fromRGB(255, 255, 255)
    }
}

local currentTheme = Themes.Dark

function NoqtUi:ApplyTheme(themeName)
    if Themes[themeName] then
        currentTheme = Themes[themeName]
    end
end

function NoqtUi:AddTheme(name, themeTable)
    Themes[name] = themeTable
end



-- Noqt UI Library 

return function()
    local NoqtUi = {}
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local HttpService = game:GetService("HttpService")
    local RunService = game:GetService("RunService")
    local TweenService = game:GetService("TweenService")

    local player = Players.LocalPlayer
    local mouse = player:GetMouse()

    -- Theme defin
    local themes = {
        ["Dark"] = {
            Background = Color3.fromRGB(30, 30, 30),
            Foreground = Color3.fromRGB(200, 200, 200),
            Accent = Color3.fromRGB(0, 120, 255),
            Button = Color3.fromRGB(50, 50, 50),
            Slider = Color3.fromRGB(80, 80, 80),
            Toggle = Color3.fromRGB(40, 120, 40),
            Textbox = Color3.fromRGB(60, 60, 60),
            Dropdown = Color3.fromRGB(70, 70, 70)
        },
        ["Sky"] = {
            Background = Color3.fromRGB(170, 210, 255),
            Foreground = Color3.fromRGB(10, 10, 60),
            Accent = Color3.fromRGB(0, 140, 255),
            Button = Color3.fromRGB(200, 230, 255),
            Slider = Color3.fromRGB(140, 180, 255),
            Toggle = Color3.fromRGB(0, 180, 255),
            Textbox = Color3.fromRGB(190, 230, 255),
            Dropdown = Color3.fromRGB(150, 190, 255)
        },
        ["Cyber"] = {
            Background = Color3.fromRGB(10, 10, 10),
            Foreground = Color3.fromRGB(0, 255, 140),
            Accent = Color3.fromRGB(0, 255, 255),
            Button = Color3.fromRGB(20, 20, 20),
            Slider = Color3.fromRGB(40, 40, 40),
            Toggle = Color3.fromRGB(0, 255, 0),
            Textbox = Color3.fromRGB(25, 25, 25),
            Dropdown = Color3.fromRGB(30, 30, 30)
        },
        ["Light"] = {
            Background = Color3.fromRGB(240, 240, 240),
            Foreground = Color3.fromRGB(40, 40, 40),
            Accent = Color3.fromRGB(0, 120, 255),
            Button = Color3.fromRGB(255, 255, 255),
            Slider = Color3.fromRGB(200, 200, 200),
            Toggle = Color3.fromRGB(120, 255, 120),
            Textbox = Color3.fromRGB(255, 255, 255),
            Dropdown = Color3.fromRGB(230, 230, 230)
        }
    }

    local currentTheme = themes["Dark"]
    local configData = {}

    function NoqtUi:ApplyTheme(themeName)
        if themes[themeName] then
            currentTheme = themes[themeName]
        end
    end
    -- Further UI logic (tabs

    
-- This file is part of Noqt UI and sh
-- Add below after ApplyTheme()

function NoqtUi:MakeWindow(opts)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NoqtUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game.CoreGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 520, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -260, 0.5, -200)
    mainFrame.BackgroundColor3 = currentTheme.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    mainFrame.Active = true
    mainFrame.Draggable = true

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = currentTheme.Accent
    title.Text = opts.Name or "Noqt Hub"
    title.TextColor3 = currentTheme.Foreground
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.Parent = mainFrame

    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, 0, 1, -40)
    contentFrame.Position = UDim2.new(0, 0, 0, 40)
    contentFrame.BackgroundColor3 = currentTheme.Background
    contentFrame.BorderSizePixel = 0
    contentFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
    contentFrame.ScrollBarThickness = 6
    contentFrame.Parent = mainFrame

    local yPos = 0
    local function createLabel(text)
        local lbl = Instance.new("TextLabel")
        lbl.Size = UDim2.new(1, -20, 0, 25)
        lbl.Position = UDim2.new(0, 10, 0, yPos)
        lbl.BackgroundTransparency = 1
        lbl.TextColor3 = currentTheme.Foreground
        lbl.Text = text
        lbl.Font = Enum.Font.Gotham
        lbl.TextSize = 14
        lbl.TextXAlignment = Enum.TextXAlignment.Left
        lbl.Parent = contentFrame
        yPos += 30
    end

    local function createToggle(text, default, callback)
        local tog = Instance.new("TextButton")
        tog.Size = UDim2.new(0, 200, 0, 30)
        tog.Position = UDim2.new(0, 10, 0, yPos)
        tog.BackgroundColor3 = currentTheme.Toggle
        tog.TextColor3 = currentTheme.Foreground
        tog.Text = text .. ": " .. tostring(default)
        tog.Font = Enum.Font.Gotham
        tog.TextSize = 14
        tog.Parent = contentFrame
        local state = default

        tog.MouseButton1Click:Connect(function()
            state = not state
            tog.Text = text .. ": " .. tostring(state)
            if callback then callback(state) end
        end)
        yPos += 40
    end

    local function createTextbox(placeholder, callback)
        local box = Instance.new("TextBox")
        box.Size = UDim2.new(0, 200, 0, 30)
        box.Position = UDim2.new(0, 10, 0, yPos)
        box.PlaceholderText = placeholder
        box.TextColor3 = currentTheme.Foreground
        box.BackgroundColor3 = currentTheme.Textbox
        box.Font = Enum.Font.Gotham
        box.TextSize = 14
        box.ClearTextOnFocus = false
        box.Parent = contentFrame

        box.FocusLost:Connect(function(enter)
            if enter and callback then
                callback(box.Text)
            end
        end)
        yPos += 40
    end

    local function createDropdown(title, options, callback)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 200, 0, 25)
        label.Position = UDim2.new(0, 10, 0, yPos)
        label.Text = title
        label.TextColor3 = currentTheme.Foreground
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.Parent = contentFrame
        yPos += 25

        for _, opt in pairs(options) do
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(0, 200, 0, 25)
            btn.Position = UDim2.new(0, 10, 0, yPos)
            btn.Text = opt
            btn.TextColor3 = currentTheme.Foreground
            btn.BackgroundColor3 = currentTheme.Dropdown
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.Parent = contentFrame
            btn.MouseButton1Click:Connect(function()
                if callback then callback(opt) end
            end)
            yPos += 30
        end
    end

    local function createKeybind(title, default, callback)
        local bind = Instance.new("TextButton")
        bind.Size = UDim2.new(0, 200, 0, 30)
        bind.Position = UDim2.new(0, 10, 0, yPos)
        bind.Text = title .. ": [" .. tostring(default.Name) .. "]"
        bind.TextColor3 = currentTheme.Foreground
        bind.BackgroundColor3 = currentTheme.Button
        bind.Font = Enum.Font.Gotham
        bind.TextSize = 14
        bind.Parent = contentFrame

        local listening = false
        bind.MouseButton1Click:Connect(function()
            listening = true
            bind.Text = title .. ": [Press Key]"
        end)

        UserInputService.InputBegan:Connect(function(input, gpe)
            if not gpe and listening then
                bind.Text = title .. ": [" .. input.KeyCode.Name .. "]"
                listening = false
                if callback then callback(input.KeyCode) end
            end
        end)
        yPos += 40
    end

    local function createSlider(title, min, max, default, callback)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 200, 0, 25)
        label.Position = UDim2.new(0, 10, 0, yPos)
        label.Text = title .. ": " .. tostring(default)
        label.TextColor3 = currentTheme.Foreground
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.Parent = contentFrame
        yPos += 25

        local slider = Instance.new("TextButton")
        slider.Size = UDim2.new(0, 200, 0, 30)
        slider.Position = UDim2.new(0, 10, 0, yPos)
        slider.Text = ""
        slider.BackgroundColor3 = currentTheme.Slider
        slider.BorderSizePixel = 0
        slider.Parent = contentFrame

        local fill = Instance.new("Frame")
        fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
        fill.BackgroundColor3 = currentTheme.Accent
        fill.BorderSizePixel = 0
        fill.Parent = slider

        slider.MouseButton1Down:Connect(function()
            local move, release
            move = mouse.Move:Connect(function()
                local scale = math.clamp((mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
                fill.Size = UDim2.new(scale, 0, 1, 0)
                local val = math.floor((min + (max - min) * scale) + 0.5)
                label.Text = title .. ": " .. val
                if callback then callback(val) end
            end)
            release = UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    move:Disconnect()
                    release:Disconnect()
                end
            end)
        end)
        yPos += 40
    end

    local api = {}

    function api:AddLabel(txt) createLabel(txt) end
    function api:AddToggle(opts) createToggle(opts.Name, opts.Default or false, opts.Callback) end
    function api:AddTextbox(opts) createTextbox(opts.PlaceholderText or "", opts.Callback) end
    function api:AddDropdown(opts) createDropdown(opts.Name, opts.Options or {}, opts.Callback) end
    function api:AddKeybind(opts) createKeybind(opts.Name, opts.Default or Enum.KeyCode.E, opts.Callback) end
    function api:AddSlider(opts) createSlider(opts.Name, opts.Min or 0, opts.Max or 100, opts.Default or 0, opts.Callback) end

    return api
end

    
end

return NoqtUi
